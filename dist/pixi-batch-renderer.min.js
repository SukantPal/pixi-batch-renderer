/*!
 * pixi-batch-renderer
 * Compiled Tue, 07 Apr 2020 17:54:42 UTC
 *
 * pixi-batch-renderer is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
this.PIXI=this.PIXI||{},this.PIXI.brend=this.PIXI.brend||{};var __batch_renderer=function(e,t){"use strict";var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function n(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var i=function(e,t){this.source=e,this.glslIdentifer=t},u=function(e){function r(r,n,i,u,s,o,a){void 0===i&&(i="float32"),void 0===u&&(u=0),void 0===s&&(s=t.TYPES.FLOAT),void 0===a&&(a=!1);var h=e.call(this,r,n)||this;return h.type=i,h.size=u,h.properSize="%notarray%"===u?1:u,h.glType=s,h.glSize=o,h.normalize=a,h}return n(r,e),r.vertexSizeFor=function(e){return e.reduce((function(e,r){return t.ViewableBuffer.sizeOf(r.type)*r.properSize+e}),0)},r}(i),s=function(){function e(e,t,r,n){void 0===n&&(n=!0),this._state=null,this._textureIncrement=e,this._textureLimit=t,this._textureProperty=r,this._batchBuffer=[],this._textureBuffer={},this._textureBufferLength=0,this._textureIndexedBuffer=[],this._textureIndexMap={},this.enableTextureReduction=n,this._putTexture=n?1===e?this._putOnlyTexture:this._putTextureArray:1===e?this._putTextureWithoutReduction:this._putTextureArrayWithoutReduction}return e.prototype.onPut=function(e){return!0},e.prototype.put=function(e,t){if(this._state){if(this._state.data!==t.data)return!1}else this._state=t;return!!this.onPut(e)&&(!(this._textureIncrement>0&&!this._putTexture(e[this._textureProperty]))&&(this._batchBuffer.push(e),!0))},e.prototype.finalize=function(e){e.batchBuffer=this._batchBuffer,e.textureBuffer=this._textureIndexedBuffer,e.uidMap=this.enableTextureReduction?this._textureIndexMap:null,e.state=this._state,this._state=null,this._batchBuffer=[],this._textureBuffer={},this._textureIndexMap={},this._textureBufferLength=0,this._textureIndexedBuffer=[]},e.prototype._putOnlyTexture=function(e){e.baseTexture&&(e=e.baseTexture);var t=e;if(this._textureBuffer[t.uid])return!0;if(this._textureBufferLength+1<=this._textureLimit){this._textureBuffer[t.uid]=e,this._textureBufferLength+=1;var r=this._textureIndexedBuffer.push(t)-1;return this._textureIndexMap[t.uid]=r,!0}return!1},e.prototype._putTextureArray=function(e){for(var t=0,r=0;r<e.length;r++){var n=e[r].baseTexture?e[r].baseTexture:e[r];this._textureBuffer[n.uid]||++t}if(t+this._textureBufferLength>this._textureLimit)return!1;for(r=0;r<e.length;r++){n=e[r].baseTexture?e[r].baseTexture:e[r];if(!this._textureBuffer[n.uid]){this._textureBuffer[n.uid]=n,this._textureBufferLength+=1;var i=this._textureIndexedBuffer.push(n)-1;this._textureIndexMap[n.uid]=i}}return!0},e.prototype._putTextureWithoutReduction=function(e){return e.baseTexture&&(e=e.baseTexture),!(this._textureBufferLength+1>this._textureLimit)&&(this._textureIndexedBuffer.push(e),!0)},e.prototype._putTextureArrayWithoutReduction=function(e){if(this._textureBufferLength+e.length>this._textureLimit)return!1;for(var t=0;t<e.length;t++)this._textureIndexedBuffer.push(e[t].baseTexture?e[t].baseTexture:e[t]);return!0},e}(),o=function(){function e(e){this.geometryOffset=e,this.textureBuffer=null,this.uidMap=null,this.state=null}return e.prototype.upload=function(e){this.textureBuffer.forEach((function(t,r){e.texture.bind(t,r)})),e.state.set(this.state)},e.prototype.reset=function(){this.textureBuffer=this.uidMap=this.state=null},e}(),a=["targetObject","compositeAttributes","compositeIndices","aIndex","iIndex","textureId","attributeRedirects"],h=function(){function e(e,t,r,n,i){void 0===n&&(n=u.vertexSizeFor(e)),n+=4*i,this._targetCompositeAttributeBuffer=null,this._targetCompositeIndexBuffer=null,this._aIndex=0,this._iIndex=0,this._attributeRedirects=e,this._indexProperty=t,this._vertexCountProperty=r,this._vertexSize=n,this._texturePerObject=i,this._aBuffers=[],this._iBuffers=[]}return Object.defineProperty(e.prototype,"packerFunction",{get:function(){return this._packerFunction||(this._packerFunction=new f(this).compile()),this._packerFunction},set:function(e){this._packerFunction=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"compositeAttributes",{get:function(){return this._targetCompositeAttributeBuffer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"compositeIndices",{get:function(){return this._targetCompositeIndexBuffer},enumerable:!0,configurable:!0}),e.prototype.reset=function(e,t){this._targetCompositeAttributeBuffer=this.getAttributeBuffer(e),this._indexProperty&&(this._targetCompositeIndexBuffer=this.getIndexBuffer(t)),this._aIndex=this._iIndex=0},e.prototype.pack=function(e,t){this.packerFunction(e,this._targetCompositeAttributeBuffer,this._targetCompositeIndexBuffer,this._aIndex,this._iIndex,t,this._attributeRedirects)},e.prototype.getAttributeBuffer=function(e){var r=t.utils.nextPow2(Math.ceil(e/8)),n=t.utils.log2(r),i=8*r;this._aBuffers.length<=n&&(this._aBuffers.length=n+1);var u=this._aBuffers[n];return u||(this._aBuffers[i]=u=new t.ViewableBuffer(i*this._vertexSize)),u},e.prototype.getIndexBuffer=function(e){var r=t.utils.nextPow2(Math.ceil(e/12)),n=t.utils.log2(r),i=12*r;this._iBuffers.length<=n&&(this._iBuffers.length=n+1);var u=this._iBuffers[n];return u||(this._iBuffers[n]=u=new Uint16Array(i)),u},e}(),f=function(){function e(e){this.packer=e}return e.prototype.compile=function(){var e=this,t=this.packer,r="";t._attributeRedirects.forEach((function(t,n){r+="\n                let __offset_"+n+" = 0;\n                const __buffer_"+n+" = (\n                    "+e._compileSourceBufferExpression(t,n)+");\n            "})),r+="\n            const {\n                int8View,\n                uint8View,\n                int16View,\n                uint16View,\n                int32View,\n                uint32View,\n                float32View,\n            } = compositeAttributes;\n\n            const vertexCount = "+this._compileVertexCountExpression()+";\n\n            let adjustedAIndex = 0;\n\n            for (let vertexIndex = 0; vertexIndex < vertexCount; vertexIndex++)\n            {\n        ";for(var n=!1,i=0;i<t._attributeRedirects.length;i++){var u=t._attributeRedirects[i];if(n||(r+="\n                    adjustedAIndex = aIndex / "+this._sizeOf(i)+";\n                "),"number"==typeof u.size)for(var s=0;s<u.size;s++)r+="\n                        "+u.type+"View[adjustedAIndex++] =\n                            __buffer_"+i+"[__offset_"+i+"++];\n                    ";else r+="\n                        "+u.type+"View[adjustedAIndex++] =\n                            __buffer_"+i+";\n                ";t._attributeRedirects[i+1]&&this._sizeOf(i+1)!==this._sizeOf(i)?r+="\n                    aIndex = adjustedAIndex * "+this._sizeOf(i)+";\n                ":n=!0}if(n&&4!==this._sizeOf(t._attributeRedirects.length-1)&&(r+="\n                    aIndex = adjustedAIndex * "+this._sizeOf(t._attributeRedirects.length-1)+"\n                ",n=!1),t._texturePerObject>0)if(t._texturePerObject>1){n||(r+="\n                        adjustedAIndex = aIndex / 4;\n                    ");for(var o=0;o<t._texturePerObject;o++)r+="\n                        float32View[adjustedAIndex++] = textureId["+o+"];\n                    ";r+="\n                    aIndex = adjustedAIndex * 4;\n                "}else r+=n?"\n                    float32View[adjustedAIndex++] = textureId;\n                    aIndex = adjustedAIndex * 4;\n                ":"\n                    float32View[aIndex] = textureId;\n                    aIndex += 4;\n                ";return r+="}\n            "+(this.packer._indexProperty?"const oldAIndex = this._aIndex;":"")+"\n            this._aIndex = aIndex;\n        ",this.packer._indexProperty&&(r+="\n                const verticesBefore = oldAIndex / "+this.packer._vertexSize+"\n                const indexCount\n                    = targetObject['"+this.packer._indexProperty+"'].length;\n\n                for (let j = 0; j < indexCount; j++)\n                {\n                    compositeIndices[iIndex++] = verticesBefore +\n                        targetObject['"+this.packer._indexProperty+"'][j];\n                }\n\n                this._iIndex = iIndex;\n            "),new(Function.bind.apply(Function,function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var u=arguments[t],s=0,o=u.length;s<o;s++,i++)n[i]=u[s];return n}([void 0],a,[r])))},e.prototype._compileSourceBufferExpression=function(e,t){return"string"==typeof e.source?"targetObject['"+e.source+"']":"attributeRedirects["+t+"].source(targetObject)"},e.prototype._compileVertexCountExpression=function(){return this.packer._vertexCountProperty?"string"==typeof this.packer._vertexCountProperty?"targetObject."+this.packer._vertexCountProperty:""+this.packer._vertexCountProperty:"__buffer_0.length / "+this.packer._attributeRedirects[0].size},e.prototype._sizeOf=function(e){return t.ViewableBuffer.sizeOf(this.packer._attributeRedirects[e].type)},e}();function c(e,t){return"string"==typeof t?e[t]:t}function _(e,t){return"string"==typeof t?e[t]:t(e)}var d=function(e){function r(t,n,i,u,o,a,f,c,_,d,p){void 0===d&&(d=new h(n,i,u,void 0,a)),void 0===p&&(p=s);var x=e.call(this,t)||this;return x._attributeRedirects=n,x._indexProperty=i,x._vertexCountProperty=u,x._textureProperty=o,x._texturePerObject=a,x._textureAttribute=f,x._stateFunction=c,x._shaderFunction=_,x._BatchGeneratorClass=p,x._batchGenerator=null,x.renderer.runners.contextChange.add(x),x.renderer.gl&&x.contextChange(),x._packer=d,x._geom=r.generateCompositeGeometry(n,!!i,f,a),x._objectBuffer=[],x._bufferedVertices=0,x._bufferedIndices=0,x._shader=null,x._batchPool=[],x._batchCount=0,x}return n(r,e),r.prototype.contextChange=function(){var e=this.renderer.gl;if(t.settings.PREFER_ENV===t.ENV.WEBGL_LEGACY?this.MAX_TEXTURES=1:this.MAX_TEXTURES=Math.min(e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),t.settings.SPRITE_MAX_TEXTURES),this._batchGenerator=new this._BatchGeneratorClass(this._texturePerObject,this.MAX_TEXTURES,this._textureProperty,!0),!this._batchGenerator.enableTextureReduction)throw new Error("PIXI.brend.BatchRenderer does not support batch generation without texture reduction enabled.")},r.prototype.start=function(){this._objectBuffer.length=0,this._bufferedVertices=0,this._bufferedIndices=0,this._shader=this._shaderFunction(this),this._shader.uniforms.uSamplers&&(this._shader.uniforms.uSamplers=r.generateTextureArray(this.MAX_TEXTURES)),this.renderer.shader.bind(this._shader,!1)},r.prototype.render=function(e){this._objectBuffer.push(e),this._bufferedVertices+=this._vertexCountFor(e),this._indexProperty&&(this._bufferedIndices+=c(e,this._indexProperty).length)},r.prototype.flush=function(){var e=this,t=e._batchGenerator,r=e._geom,n=e._packer,i=e.renderer,u=e._stateFunction,s=e._textureProperty,o=e._texturePerObject,a=i.gl,h=this._objectBuffer,f=h.length;this._batchCount=0,n.reset(this._bufferedVertices,this._bufferedIndices);for(var d=0,p=0;p<f;){var x=h[p];t.put(x,_(x,u))?++p:(t.finalize(this._newBatch(d)),d=p)}0!==t._batchBuffer.length&&t.finalize(this._newBatch(d));for(var l=1===this._texturePerObject?0:new Array(o),b=0;b<this._batchCount;b++)for(var g=(S=this._batchPool[b]).batchBuffer,y=g.length,I=S.uidMap,v=0,B=0,m=0;m<y;m++){var P=g[m];this._indexProperty?B+=c(P,this._indexProperty).length:v+=c(P,this._vertexCountProperty),S.$vertexCount=v,S.$indexCount=B;var T=P[s],A=void 0;if(1===o)l=I[A=T.baseTexture?T.baseTexture.uid:T.uid];else for(var j=void 0,C=0;C<T.length;C++)A=(j=T[C]).BaseTexture?j.baseTexture.uid:j.uid,l[C]=I[A];n.pack(P,l)}r.$buffer.update(n.compositeAttributes.float32View),r.getIndex().update(n.compositeIndices),i.geometry.bind(r),i.geometry.updateBuffers();for(b=0;b<this._batchCount;b++){var S;(S=this._batchPool[b]).upload(),this._indexProperty?a.drawElements(a.TRIANGLES,S.$indexCount,a.UNSIGNED_SHORT,2*S.geometryOffset):a.drawArrays(a.TRIANGLES,S.geometryOffset,S.$vertexCount),S.reset()}},r.prototype.stop=function(){this._bufferedVertices&&this.flush()},r.prototype._newBatch=function(e){if(this._batchCount===this._batchPool.length){var t=new o(e);return this._batchPool.push(t),++this._batchCount,t}var r=this._batchPool[this._batchCount++];return r.reset(),r.geometryOffset=e,r},r.prototype._vertexCountFor=function(e){return this._vertexCountProperty?c(e,this._vertexCountProperty):_(e,this._attributeRedirects[0].source).length/this._attributeRedirects[0].size},r.generateCompositeGeometry=function(e,r,n,i){var u=new t.Geometry,s=new t.Buffer(null,!1,!1),o=r?new t.Buffer(null,!1,!0):null;return e.forEach((function(e){var t=e.glslIdentifer,r=e.glType,n=e.glSize,i=e.normalize;u.addAttribute(t,s,n,i,r)})),n&&i>0&&u.addAttribute(n,s,i,!0,t.TYPES.FLOAT),r&&u.addIndex(o),u.$buffer=s,u},r.generateTextureArray=function(e){for(var t=new Int32Array(e),r=0;r<e;r++)t[r]=r;return t},r}(t.ObjectRenderer),p=function(){function e(){}return e.from=function(e,t,r,i,u,s,o,a,h,f,c){return void 0===c&&(c=d),function(c){function _(n){return c.call(this,n,e,t,r,i,u,s,o,a,h,f)||this}return n(_,c),_}(c)},e}();function x(e,t,r){return e.replace(new RegExp(t,"g"),r)}function l(e){return""+e.MAX_TEXTURES}var b=function(){function e(e,t,r,n,i){void 0===r&&(r={}),void 0===n&&(n={"%texturesPerBatch%":l}),void 0===i&&(i=!0),n["%texturesPerBatch%"]||(n["%texturesPerBatch%"]=l),this._vertexShaderTemplate=e,this._fragmentShaderTemplate=t,this._uniforms=r,this._templateInjectors=n,this.disableVertexShaderTemplate=i,this._cache={},this._cState=null}return e.prototype.generateFunction=function(){var e=this;return function(t){var r=e._generateInjectorBasedState(t),n=e._cache[r];return n||e._generateShader(r)}},e.prototype._generateInjectorBasedState=function(e){var t="",r=this._cState={};for(var n in this._templateInjectors){var i=this._templateInjectors[n](e);t+=i,r[n]=i}return t},e.prototype._generateShader=function(e){var r=this._vertexShaderTemplate.slice(0),n=this._fragmentShaderTemplate.slice(0);for(var i in this._cState)this.disableVertexShaderTemplate||(r=x(r,i,this._cState[i])),n=x(n,i,this._cState[i]);var u=t.Shader.from(r,n,this._uniforms);return this._cache[e]=u,u},e}();return e.AttributeRedirect=u,e.BatchGenerator=s,e.BatchRenderer=d,e.BatchRendererPluginFactory=p,e.GeometryPacker=h,e.Redirect=i,e.ShaderGenerator=b,e}({},PIXI);Object.assign(this.PIXI.brend,__batch_renderer);
//# sourceMappingURL=pixi-batch-renderer.min.js.map
